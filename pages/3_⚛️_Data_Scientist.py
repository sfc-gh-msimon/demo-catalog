import streamlit as st
from annotated_text import annotated_text

st.set_page_config(page_title="Data scientist", page_icon="‚öõÔ∏è",layout="wide")


'### üé• Snowpark 101 - Analyse sur les films'
annotated_text(
    ("Any",                 "Industrie",        "#8ef","#000"),
    ("Snowpark python",     "Feature",          "#fea","#000"),
    ("Jupyter notebook",    "Outil",            "#afa","#000")
)
'''
[Github](https://github.com/Snowflake-Labs/snowpark-python-examples/tree/main/Snowpark101)
1. Utiliser un Jupyter Notebook pour acc√©der √† Snowflake avec Snowpark python.
2. Cr√©er des fonctions en local et les ex√©cuter sur Snowflake
3. Cr√©er une r√©gression lin√©aire pour pr√©duire le nombre de films produits annuellement
'''
col1, col2, col3 = st.columns(([1,2,1]))
with col2:
   st.video('https://youtu.be/_peXDwdEpXA')



'### üè° Pr√©dire la rentabilit√© des investissements immobiliers'
annotated_text(
    ("Any",                  "Industrie",        "#8ef","#000"),
    ("Annonces immobili√®res","Donn√©es",          "#faa","#000"),
    ("Snowpark python",      "Feature",          "#fea","#000"),
    ("Streamlit",            "Outil",            "#afa","#000"),
    ("Jupyter notebook",     "Outil",            "#afa","#000")
)
'''
[Github](https://github.com/snowflakecorp/snowpark-python-xgboost-realestate)
1. Sur base d'une liste d'annonces immobili√®res de ventes et locations en France, pr√©dire un prix de location pour chaque annonce de vente
2. Calculer la rentabilit√© de chaque annonce de vente (prix de location estim√© / prix d'achat du bien)
3. Visualiser les r√©sultats dans une application Streamlit
4. Explorer les r√©sultats par r√©gion pour trouver les annonces les plus rentables !
'''
col1, col2, col3 = st.columns(([1,2,1]))
with col2:
   st.video('https://youtu.be/AXeOTxJo_78')



'### üë©‚Äçüë©‚Äçüëß‚Äçüë¶ D√©duplication de master data avec TF-IDF'
annotated_text(
    ("Any",             "Industrie",        "#8ef","#000"),
    ("Snowpark python", "Feature",          "#fea","#000"),
    ("Hex",             "Outil",            "#afa","#000")
)
'''
[Hex notebook](https://app.hex.tech/snowflake/hex/d264214a-09cc-40e4-b980-a294ff3114bc/draft/logic) - 
[Blog](https://medium.com/snowflake/entity-matching-using-tf-idf-in-snowpark-python-3d1942d4ef19)
1. De nombreuses organisations ont des master data (clients, produits) dupliqu√©es dans plusieurs syst√®mes.
2. Utiliser Hex pour se connecter √† Snowflake en Python et SQL, pour acc√©der √† une table de clients qui contient des trous et une table de clients compl√®te.
3. Impl√©menter un algorithme de d√©duplication entre le jeu de donn√©es complet et celui qui contient des trous. D√©duplication avec TF-IDF en Python ex√©cut√© sur Snowpark
'''
col1, col2, col3 = st.columns(([1,2,1]))
with col2:
   st.video('https://youtu.be/4tvesDD5gQg')



'### ü•∑üèª D√©tection de fraudes sur des transactions e-commerce'
annotated_text(
    ("Any",                     "Industrie",        "#8ef","#000"),
    ("Transactions e-commerce", "Donn√©es",          "#faa","#000"),
    ("Snowpark python",         "Feature",          "#fea","#000"),
    ("Marketplace",             "Feature",          "#fea","#000"),
    ("Jupyter notebook",        "Outil",            "#afa","#000")
)
'''
[Github](https://github.com/Snowflake-Labs/snowpark-python-examples/tree/main/Fraud-Detection-Demo) - 
[English video](https://www.youtube.com/watch?v=zuBnBpFtUjA&ab_channel=SnowflakeInc.)
1. Ing√©rer des donn√©es de transaction E-commerce dans Snowflake
2. Enrichir les transactions avec des donn√©es mises √† disposition sur la Snowflake Marketplace par IPInfo
3. Visualiser les transactions pass√©es : quels sont les facteurs suspects des transactions frauduleuses
4. Sur base de r√©sultats pass√©s et d'informations sur les adresses IP fournies par IPInfo, cr√©er un mod√®le de pr√©diction de fraudes
5. Ex√©cuter l'inf√©rence en masse sur Snowflake
'''
col1, col2, col3 = st.columns(([1,2,1]))
with col2:
   st.video('https://youtu.be/T83FBoTsu4Y')


'### üèéÔ∏è Marketing analytics : Transformez vos clients en fans'
annotated_text(
    ("Evenements",              "Industrie",        "#8ef","#000"),
    ("Marketing",               "Donn√©es",          "#faa","#000"),
    ("Neustar",                 "Donn√©es",          "#faa","#000"),
    ("Snowpark python",         "Feature",          "#fea","#000"),
    ("Marketplace",             "Feature",          "#fea","#000"),
    ("Jupyter notebook",        "Outil",            "#afa","#000"),
    ("Snowsight",               "Outil",            "#afa","#000"),
    ("Tableau",                 "Outil",            "#afa","#000")
)
'''
[Github](https://github.com/snowflakecorp/frostbytes/tree/main/Department%20-%20Marketing%20Analytics) 
1. Comprendre nos clients
- Explorer les donn√©es internes sur les clients
- Joindre les donn√©es internes aux donn√©es fournies sur la Marketplace par Neustar
- Cr√©er des fonctions en SQL pour permettre aux analystes de requ√™ter les donn√©es plus facilement

2. Data Science
- D√©terminer le lead score de chaque client pour chaque √©v√®nement : entrainer un mod√®le xgboost, d√©ployer le mod√®le, expliquer le mod√®le
- D√©terminer la meilleure action √† prendre pour chaque client (t√©l√©phone, mail, pas de contact) en fonction de son historique : entrainer un mod√®le, d√©ployer le mod√®le, expliquer le mod√®le, automatiser l'historisation des performances du mod√®le et le r√©-entrainement en cas de drift.

3. Analytics et prise d'action
- Dashboard corporate dans snowsight pour avoir une vue d'ensemble des ventes et de la performance des √©v√®nements, ainsi qu'un drill-down sur les clients
- Dashboard op√©rationnel dans Tableau pour donner aux √©quipes de contact clients les informations n√©cessaires afin d'offrir le meilleur service (lead score, meilleure action √† prendre) et aux √©quipes marketing pour confectionner des campagnes marketing pour les prochains √©v√®nements
'''
col1, col2, col3 = st.columns(([1,2,1]))
with col2:
   st.video('https://youtu.be/JtPwHQJ25TA')
